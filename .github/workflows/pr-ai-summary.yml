name: PR AI Summary Bot with Slack

on:
  pull_request:
    types: [opened, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  ai-summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y gh jq yq

      - name: Generate AI Summary
        env:
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_title="${{ github.event.pull_request.title }}"
          pr_body="${{ github.event.pull_request.body }}"
          pr_number="${{ github.event.pull_request.number }}"
          pr_url="${{ github.event.pull_request.html_url }}"

          prompt="Summarize this pull request in 2-3 simple sentences for a developer.\n\nTitle: $pr_title\nDescription: $pr_body"

          json_payload=$(jq -n \
            --arg content "$prompt" \
            '{
              model: "mistralai/Mixtral-8x7B-Instruct-v0.1",
              messages: [
                {
                  role: "user",
                  content: $content
                }
              ],
              temperature: 0.7
            }'
          )

          response=$(curl -s https://api.together.xyz/v1/chat/completions \
            -H "Authorization: Bearer $TOGETHER_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$json_payload")

          echo "$response" | jq .
          summary=$(echo "$response" | jq -r '.choices[0].message.content // "❌ Could not extract summary from response"')
          echo "AI Summary: $summary"

          echo "$summary" > summary.txt
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
          echo "PR_URL=$pr_url" >> $GITHUB_ENV
          echo "SUMMARY=$summary" >> $GITHUB_ENV

      - name: Comment Summary on PR
        run: |
          gh pr comment "$PR_NUMBER" --body "$SUMMARY"

      - name: Send to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          # Load reviewer usernames
          reviewers=$(gh pr view "$PR_NUMBER" --json reviewRequests -q '.reviewRequests[].requestedReviewer.login')

          # Fallback if mapping file is missing
          map_file=".github/username-map.yml"
          if [ ! -f "$map_file" ]; then
            echo "github_to_slack:" > "$map_file"
          fi

          mentions=""
          for user in $reviewers; do
            slack_name=$(yq ".github_to_slack.\"$user\"" "$map_file")
            if [ "$slack_name" != "null" ]; then
              mentions="$mentions $slack_name"
            else
              mentions="$mentions @$user"
            fi
          done

          # Post to Slack
          message="🔔 *New PR for Review!*\n*Title:* $pr_title\n*Link:* <$PR_URL>\n*Reviewers:* $mentions\n_AI Summary:_\n$SUMMARY"

          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"$message\"}" \
            "$SLACK_WEBHOOK_URL"
